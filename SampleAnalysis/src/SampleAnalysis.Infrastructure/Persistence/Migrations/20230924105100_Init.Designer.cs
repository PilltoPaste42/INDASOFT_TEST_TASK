// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleAnalysis.Infrastructure.Persistence;

#nullable disable

namespace SampleAnalysis.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230924105100_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<Guid>("EventFrameTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_EventFrames_Id");

                    b.HasIndex("EventFrameTypeId");

                    b.ToTable("EventFrames");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrameType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_EventFrameTypes_Id");

                    b.ToTable("EventFrameTypes");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrameTypeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("EventFrameTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_EventFrameTypeValues_Id");

                    b.HasIndex("EventFrameTypeId");

                    b.ToTable("EventFrameTypeValues");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrameValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("EventFrameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserfieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ValueDatetime")
                        .HasColumnType("datetime");

                    b.Property<double?>("ValueFloat")
                        .HasColumnType("float");

                    b.Property<int?>("ValueInt")
                        .HasColumnType("int");

                    b.Property<string>("ValueText")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_EventFrameValues_Id");

                    b.HasIndex("EventFrameId");

                    b.HasIndex("UserfieldId");

                    b.ToTable("EventFrameValues");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ChildEventFrameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildEventFrameTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentEventFrameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentEventFrameTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_Links_Id");

                    b.HasIndex("ChildEventFrameId");

                    b.HasIndex("ChildEventFrameTypeId");

                    b.HasIndex("ParentEventFrameId");

                    b.HasIndex("ParentEventFrameTypeId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrame", b =>
                {
                    b.HasOne("SampleAnalysis.Domain.Models.EventFrameType", "EventFrameType")
                        .WithMany("EventFrames")
                        .HasForeignKey("EventFrameTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__EventFram__Event__276EDEB3");

                    b.Navigation("EventFrameType");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrameTypeValue", b =>
                {
                    b.HasOne("SampleAnalysis.Domain.Models.EventFrameType", "EventFrameType")
                        .WithMany("EventFrameTypeValues")
                        .HasForeignKey("EventFrameTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__EventFram__Event__38996AB5");

                    b.Navigation("EventFrameType");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrameValue", b =>
                {
                    b.HasOne("SampleAnalysis.Domain.Models.EventFrame", "EventFrame")
                        .WithMany("EventFrameValues")
                        .HasForeignKey("EventFrameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EventFram__Event__36B12243");

                    b.HasOne("SampleAnalysis.Domain.Models.EventFrameTypeValue", "Userfield")
                        .WithMany("EventFrameValues")
                        .HasForeignKey("UserfieldId")
                        .IsRequired()
                        .HasConstraintName("FK__EventFram__Userf__37A5467C");

                    b.Navigation("EventFrame");

                    b.Navigation("Userfield");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.Link", b =>
                {
                    b.HasOne("SampleAnalysis.Domain.Models.EventFrame", "ChildEventFrame")
                        .WithMany("LinkChildEventFrames")
                        .HasForeignKey("ChildEventFrameId")
                        .IsRequired()
                        .HasConstraintName("FK__Links__ChildEven__4BAC3F29");

                    b.HasOne("SampleAnalysis.Domain.Models.EventFrameType", "ChildEventFrameType")
                        .WithMany("LinkChildEventFrameTypes")
                        .HasForeignKey("ChildEventFrameTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Links__ChildEven__4D94879B");

                    b.HasOne("SampleAnalysis.Domain.Models.EventFrame", "ParentEventFrame")
                        .WithMany("LinkParentEventFrames")
                        .HasForeignKey("ParentEventFrameId")
                        .IsRequired()
                        .HasConstraintName("FK__Links__ParentEve__4AB81AF0");

                    b.HasOne("SampleAnalysis.Domain.Models.EventFrameType", "ParentEventFrameType")
                        .WithMany("LinkParentEventFrameTypes")
                        .HasForeignKey("ParentEventFrameTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Links__ParentEve__4CA06362");

                    b.Navigation("ChildEventFrame");

                    b.Navigation("ChildEventFrameType");

                    b.Navigation("ParentEventFrame");

                    b.Navigation("ParentEventFrameType");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrame", b =>
                {
                    b.Navigation("EventFrameValues");

                    b.Navigation("LinkChildEventFrames");

                    b.Navigation("LinkParentEventFrames");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrameType", b =>
                {
                    b.Navigation("EventFrameTypeValues");

                    b.Navigation("EventFrames");

                    b.Navigation("LinkChildEventFrameTypes");

                    b.Navigation("LinkParentEventFrameTypes");
                });

            modelBuilder.Entity("SampleAnalysis.Domain.Models.EventFrameTypeValue", b =>
                {
                    b.Navigation("EventFrameValues");
                });
#pragma warning restore 612, 618
        }
    }
}
